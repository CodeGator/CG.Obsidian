{
  "api/CG.Obsidian.html": {
    "href": "api/CG.Obsidian.html",
    "title": "Namespace CG.Obsidian",
    "keywords": "Namespace CG.Obsidian Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for the CG.Obsidian library."
  },
  "api/CG.Obsidian.Managers.html": {
    "href": "api/CG.Obsidian.Managers.html",
    "title": "Namespace CG.Obsidian.Managers",
    "keywords": "Namespace CG.Obsidian.Managers Classes MimeTypeManager This class is a default implementation of the IMimeTypeManager interface. Interfaces IMimeTypeManager This interface represents an obbject that manages operations related to MIME types."
  },
  "api/CG.Obsidian.Managers.IMimeTypeManager.html": {
    "href": "api/CG.Obsidian.Managers.IMimeTypeManager.html",
    "title": "Interface IMimeTypeManager",
    "keywords": "Interface IMimeTypeManager This interface represents an obbject that manages operations related to MIME types. Inherited Members System.IDisposable.Dispose() Namespace : CG.Obsidian.Managers Assembly : CG.Obsidian.Abstractions.dll Syntax public interface IMimeTypeManager : IManager, IDisposable Properties FileExtensions This property contains a reference to an object stores and retrieves FileExtension objects. Declaration IFileExtensionStore FileExtensions { get; } Property Value Type Description IFileExtensionStore MimeTypes This property contains a reference to an object stores and retrieves MimeType objects. Declaration IMimeTypeStore MimeTypes { get; } Property Value Type Description IMimeTypeStore Methods FindByExtensionAsync(String, CancellationToken) This method returns a list of mime type(s) that are associated with the specified file extension. Declaration Task<IEnumerable<MimeType>> FindByExtensionAsync(string extension, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String extension The file extension to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < MimeType >> A task to perform the operation, that returns the results of the search."
  },
  "api/CG.Obsidian.Managers.MimeTypeManager.html": {
    "href": "api/CG.Obsidian.Managers.MimeTypeManager.html",
    "title": "Class MimeTypeManager",
    "keywords": "Class MimeTypeManager This class is a default implementation of the IMimeTypeManager interface. Inheritance System.Object CG.DisposableBase CG.Business.Managers.ManagerBase MimeTypeManager Implements IMimeTypeManager CG.Business.Managers.IManager System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Managers Assembly : CG.Obsidian.dll Syntax public class MimeTypeManager : ManagerBase, IMimeTypeManager, IManager, IDisposable Constructors MimeTypeManager(IMimeTypeStore, IFileExtensionStore, ILogger<MimeTypeManager>) This constructor creates a new instance of the MimeTypeManager class. Declaration public MimeTypeManager(IMimeTypeStore mimeTypeStore, IFileExtensionStore fileExtensionStore, ILogger<MimeTypeManager> logger) Parameters Type Name Description IMimeTypeStore mimeTypeStore The mime type store to use with the manager. IFileExtensionStore fileExtensionStore The file extension store to use with the manager. Microsoft.Extensions.Logging.ILogger < MimeTypeManager > logger The logger to use with the manager. Properties FileExtensions This property contains a reference to an object stores and retrieves FileExtension objects. Declaration public IFileExtensionStore FileExtensions { get; } Property Value Type Description IFileExtensionStore Logger This property contains a reference to a logger. Declaration protected ILogger<MimeTypeManager> Logger { get; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < MimeTypeManager > MimeTypes This property contains a reference to an object stores and retrieves MimeType objects. Declaration public IMimeTypeStore MimeTypes { get; } Property Value Type Description IMimeTypeStore Methods FindByExtensionAsync(String, CancellationToken) This method returns a list of mime type(s) that are associated with the specified file extension. Declaration public virtual Task<IEnumerable<MimeType>> FindByExtensionAsync(string extension, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.String extension The file extension to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IEnumerable < MimeType >> A task to perform the operation, that returns the results of the search. Implements IMimeTypeManager CG.Business.Managers.IManager System.IDisposable"
  },
  "api/CG.Obsidian.Models.FileExtension.html": {
    "href": "api/CG.Obsidian.Models.FileExtension.html",
    "title": "Class FileExtension",
    "keywords": "Class FileExtension This class is a model that represents a file extension assocaited with a MIME type. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Business.Models.ModelBase CG.Business.Models.AuditedModelBase FileExtension Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IAuditedModel CG.Business.Models.IModel Inherited Members CG.Business.Models.AuditedModelBase.CreatedDate CG.Business.Models.AuditedModelBase.CreatedBy CG.Business.Models.AuditedModelBase.UpdatedDate CG.Business.Models.AuditedModelBase.UpdatedBy CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Models Assembly : CG.Obsidian.Abstractions.dll Syntax public class FileExtension : AuditedModelBase, IValidatableObject, IAuditedModel, IModel Properties Extension This property contains a file extension. Declaration [Required] [MaxLength(260)] public string Extension { get; set; } Property Value Type Description System.String Id This property contains a unique identifier for the model. Declaration public int Id { get; set; } Property Value Type Description System.Int32 MimeTypeId This property contains the identifier for the associated mime type. Declaration public int MimeTypeId { get; set; } Property Value Type Description System.Int32 Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IAuditedModel CG.Business.Models.IModel"
  },
  "api/CG.Obsidian.Models.html": {
    "href": "api/CG.Obsidian.Models.html",
    "title": "Namespace CG.Obsidian.Models",
    "keywords": "Namespace CG.Obsidian.Models Classes FileExtension This class is a model that represents a file extension assocaited with a MIME type. MimeType This class is a model that represents a MIME type."
  },
  "api/CG.Obsidian.Models.MimeType.html": {
    "href": "api/CG.Obsidian.Models.MimeType.html",
    "title": "Class MimeType",
    "keywords": "Class MimeType This class is a model that represents a MIME type. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Business.Models.ModelBase CG.Business.Models.AuditedModelBase MimeType Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IAuditedModel CG.Business.Models.IModel Inherited Members CG.Business.Models.AuditedModelBase.CreatedDate CG.Business.Models.AuditedModelBase.CreatedBy CG.Business.Models.AuditedModelBase.UpdatedDate CG.Business.Models.AuditedModelBase.UpdatedBy CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Models Assembly : CG.Obsidian.Abstractions.dll Syntax public class MimeType : AuditedModelBase, IValidatableObject, IAuditedModel, IModel Constructors MimeType() This concstructor creates a new instance of the MimeType class. Declaration public MimeType() Properties Description This property contains a description of the mime type. Declaration [MaxLength(128)] public string Description { get; set; } Property Value Type Description System.String Extensions This property contains a list of associated file extensions. Declaration public IList<FileExtension> Extensions { get; set; } Property Value Type Description System.Collections.Generic.IList < FileExtension > Id This property contains a unique identifier for the model. Declaration public int Id { get; set; } Property Value Type Description System.Int32 SubType This property contains the MIME sub-type. Declaration [Required] [MaxLength(127)] public string SubType { get; set; } Property Value Type Description System.String Type This property contains the MIME type. Declaration [Required] [MaxLength(127)] public string Type { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject CG.Business.Models.IAuditedModel CG.Business.Models.IModel"
  },
  "api/CG.Obsidian.Repositories.html": {
    "href": "api/CG.Obsidian.Repositories.html",
    "title": "Namespace CG.Obsidian.Repositories",
    "keywords": "Namespace CG.Obsidian.Repositories Interfaces IFileExtensionRepository This interface represents an object that stores and retrieves FileExtension objects. IMimeTypeRepository This interface represents an object that stores and retrieves MimeType objects."
  },
  "api/CG.Obsidian.Repositories.IFileExtensionRepository.html": {
    "href": "api/CG.Obsidian.Repositories.IFileExtensionRepository.html",
    "title": "Interface IFileExtensionRepository",
    "keywords": "Interface IFileExtensionRepository This interface represents an object that stores and retrieves FileExtension objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Obsidian.Repositories Assembly : CG.Obsidian.Abstractions.dll Syntax public interface IFileExtensionRepository : IRepository, IDisposable Methods AddAsync(FileExtension, CancellationToken) This method adds a new FileExtension object to the store. Declaration Task<FileExtension> AddAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly added FileExtension object. AsQueryable() This method returns a queryable sequence of FileExtension objects. Declaration IQueryable<FileExtension> AsQueryable() Returns Type Description System.Linq.IQueryable < FileExtension > A queryable sequence of FileExtension objects. DeleteAsync(FileExtension, CancellationToken) This method deletes an existing FileExtension object from the store. Declaration Task DeleteAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated FileExtension object. UpdateAsync(FileExtension, CancellationToken) This method updates an existing FileExtension object in the store. Declaration Task<FileExtension> UpdateAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly updated FileExtension object."
  },
  "api/CG.Obsidian.Repositories.IMimeTypeRepository.html": {
    "href": "api/CG.Obsidian.Repositories.IMimeTypeRepository.html",
    "title": "Interface IMimeTypeRepository",
    "keywords": "Interface IMimeTypeRepository This interface represents an object that stores and retrieves MimeType objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Obsidian.Repositories Assembly : CG.Obsidian.Abstractions.dll Syntax public interface IMimeTypeRepository : IRepository, IDisposable Methods AddAsync(MimeType, CancellationToken) This method adds a new MimeType object to the store. Declaration Task<MimeType> AddAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly added MimeType object. AsQueryable() This method returns a queryable sequence of MimeType objects. Declaration IQueryable<MimeType> AsQueryable() Returns Type Description System.Linq.IQueryable < MimeType > A queryable sequence of MimeType objects. DeleteAsync(MimeType, CancellationToken) This method deletes an existing MimeType object from the store. Declaration Task DeleteAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated MimeType object. UpdateAsync(MimeType, CancellationToken) This method updates an existing MimeType object in the store. Declaration Task<MimeType> UpdateAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly updated MimeType object."
  },
  "api/CG.Obsidian.ServiceCollectionExtensions.html": {
    "href": "api/CG.Obsidian.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for the CG.Obsidian library. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian Assembly : CG.Obsidian.dll Syntax public static class ServiceCollectionExtensions Methods AddObsidianManagers(IServiceCollection, IConfiguration, ServiceLifetime) This method adds managers for the CG.Obsidian library. Declaration public static IServiceCollection AddObsidianManagers(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. AddObsidianStores(IServiceCollection, IConfiguration, ServiceLifetime) This method adds stores for the CG.Obsidian library. Declaration public static IServiceCollection AddObsidianStores(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "api/CG.Obsidian.SqlServer.DesignTimeObsidianDbContextFactory.html": {
    "href": "api/CG.Obsidian.SqlServer.DesignTimeObsidianDbContextFactory.html",
    "title": "Class DesignTimeObsidianDbContextFactory",
    "keywords": "Class DesignTimeObsidianDbContextFactory This class is a default implementation of the Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext> interface, used only for local, dev migrations. Inheritance System.Object DesignTimeObsidianDbContextFactory Implements Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory < ObsidianDbContext > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.SqlServer Assembly : CG.Obsidian.SqlServer.dll Syntax public class DesignTimeObsidianDbContextFactory : IDesignTimeDbContextFactory<ObsidianDbContext> Remarks This class contains a factory used by EFCORE to create data-context instances during migration related operations. Methods CreateDbContext(String[]) This method creates a new ObsidianDbContext instance. Declaration public ObsidianDbContext CreateDbContext(string[] args) Parameters Type Name Description System.String [] args Optional arguments. Returns Type Description ObsidianDbContext A ObsidianDbContext instance. Implements Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext>"
  },
  "api/CG.Obsidian.SqlServer.html": {
    "href": "api/CG.Obsidian.SqlServer.html",
    "title": "Namespace CG.Obsidian.SqlServer",
    "keywords": "Namespace CG.Obsidian.SqlServer Classes DesignTimeObsidianDbContextFactory This class is a default implementation of the Microsoft.EntityFrameworkCore.Design.IDesignTimeDbContextFactory<TContext> interface, used only for local, dev migrations. ObsidianDbContext This class is a data-context for the CG.Obsidian library."
  },
  "api/CG.Obsidian.SqlServer.Migrations.html": {
    "href": "api/CG.Obsidian.SqlServer.Migrations.html",
    "title": "Namespace CG.Obsidian.SqlServer.Migrations",
    "keywords": "Namespace CG.Obsidian.SqlServer.Migrations Classes InitialCreate"
  },
  "api/CG.Obsidian.SqlServer.Migrations.InitialCreate.html": {
    "href": "api/CG.Obsidian.SqlServer.Migrations.InitialCreate.html",
    "title": "Class InitialCreate",
    "keywords": "Class InitialCreate Inheritance System.Object Microsoft.EntityFrameworkCore.Migrations.Migration InitialCreate Inherited Members Microsoft.EntityFrameworkCore.Migrations.Migration.InitialDatabase Microsoft.EntityFrameworkCore.Migrations.Migration.TargetModel Microsoft.EntityFrameworkCore.Migrations.Migration.UpOperations Microsoft.EntityFrameworkCore.Migrations.Migration.DownOperations Microsoft.EntityFrameworkCore.Migrations.Migration.ActiveProvider System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.SqlServer.Migrations Assembly : CG.Obsidian.SqlServer.dll Syntax [DbContext(typeof(ObsidianDbContext))] [Migration(\"20210428175834_InitialCreate\")] public class InitialCreate : Migration Methods BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder) Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder) Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder migrationBuilder Overrides Microsoft.EntityFrameworkCore.Migrations.Migration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)"
  },
  "api/CG.Obsidian.SqlServer.ObsidianDbContext.html": {
    "href": "api/CG.Obsidian.SqlServer.ObsidianDbContext.html",
    "title": "Class ObsidianDbContext",
    "keywords": "Class ObsidianDbContext This class is a data-context for the CG.Obsidian library. Inheritance System.Object Microsoft.EntityFrameworkCore.DbContext ObsidianDbContext Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure < System.IServiceProvider > Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService Inherited Members Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.Type) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbSetCache.GetOrAddSet(Microsoft.EntityFrameworkCore.Internal.IDbSetSource, System.String, System.Type) Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>() Microsoft.EntityFrameworkCore.DbContext.Set<TEntity>(System.String) Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder) Microsoft.EntityFrameworkCore.DbContext.SaveChanges() Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.ClearLease() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SetLease(Microsoft.EntityFrameworkCore.Internal.DbContextLease) Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable.SnapshotConfiguration() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetState() Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IResettableService.ResetStateAsync(System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Dispose() Microsoft.EntityFrameworkCore.DbContext.DisposeAsync() Microsoft.EntityFrameworkCore.DbContext.Entry<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object) Microsoft.EntityFrameworkCore.DbContext.Add<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.AddAsync<TEntity>(TEntity, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Update<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Remove<TEntity>(TEntity) Microsoft.EntityFrameworkCore.DbContext.Add(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object) Microsoft.EntityFrameworkCore.DbContext.Update(System.Object) Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable<System.Object>, System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable<System.Object>) Microsoft.EntityFrameworkCore.DbContext.Find(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type, System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.Find<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[]) Microsoft.EntityFrameworkCore.DbContext.FindAsync<TEntity>(System.Object[], System.Threading.CancellationToken) Microsoft.EntityFrameworkCore.DbContext.FromExpression<TResult>(System.Linq.Expressions.Expression<System.Func<System.Linq.IQueryable<TResult>>>) Microsoft.EntityFrameworkCore.DbContext.Database Microsoft.EntityFrameworkCore.DbContext.ChangeTracker Microsoft.EntityFrameworkCore.DbContext.Model Microsoft.EntityFrameworkCore.DbContext.ContextId Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.SetSource Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityFinderFactory Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.QueryProvider Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.StateManager Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.ChangeDetector Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.EntityGraphAttacher Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.UpdateLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies.InfrastructureLogger Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.Instance Microsoft.EntityFrameworkCore.DbContext.SavingChanges Microsoft.EntityFrameworkCore.DbContext.SavedChanges Microsoft.EntityFrameworkCore.DbContext.SaveChangesFailed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.SqlServer Assembly : CG.Obsidian.SqlServer.dll Syntax public class ObsidianDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IDisposable, IAsyncDisposable, IResettableService Constructors ObsidianDbContext(DbContextOptions<ObsidianDbContext>) This constructor creates a new instance of the ObsidianDbContext class. Declaration public ObsidianDbContext(DbContextOptions<ObsidianDbContext> options) Parameters Type Name Description Microsoft.EntityFrameworkCore.DbContextOptions < ObsidianDbContext > options The options to use with the data-context. Properties FileExtensions This property contains a collection of file extension types. Declaration public virtual DbSet<FileExtension> FileExtensions { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < FileExtension > MimeTypes This property contains a collection of mime types. Declaration public virtual DbSet<MimeType> MimeTypes { get; set; } Property Value Type Description Microsoft.EntityFrameworkCore.DbSet < MimeType > Methods OnModelCreating(ModelBuilder) This method is called to create the model for the data-context. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description Microsoft.EntityFrameworkCore.ModelBuilder modelBuilder The builder to use for the operation. Overrides Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder) Implements Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<T> Microsoft.EntityFrameworkCore.Internal.IDbContextDependencies Microsoft.EntityFrameworkCore.Internal.IDbSetCache Microsoft.EntityFrameworkCore.Internal.IDbContextPoolable System.IDisposable System.IAsyncDisposable Microsoft.EntityFrameworkCore.Infrastructure.IResettableService"
  },
  "api/CG.Obsidian.SqlServer.Repositories.FileExtensionRepository.html": {
    "href": "api/CG.Obsidian.SqlServer.Repositories.FileExtensionRepository.html",
    "title": "Class FileExtensionRepository",
    "keywords": "Class FileExtensionRepository This class is a SQL-Server implementation of the IFileExtensionRepository interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Linq.EFCore.Repositories.EFCoreRepositoryBase < ObsidianDbContext , Microsoft.Extensions.Options.IOptions < ObsidianRepositoryOptions >> FileExtensionRepository Implements IFileExtensionRepository CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<CG.Obsidian.SqlServer.ObsidianDbContext, Microsoft.Extensions.Options.IOptions<CG.Obsidian.SqlServer.Repositories.Options.ObsidianRepositoryOptions>>.Factory CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.SqlServer.Repositories Assembly : CG.Obsidian.SqlServer.dll Syntax public class FileExtensionRepository : EFCoreRepositoryBase<ObsidianDbContext, IOptions<ObsidianRepositoryOptions>>, IFileExtensionRepository, IRepository, IDisposable Constructors FileExtensionRepository(IOptions<ObsidianRepositoryOptions>, IDbContextFactory<ObsidianDbContext>, ILogger<FileExtensionRepository>) This constructor creates a new instance of the FileExtensionRepository class. Declaration public FileExtensionRepository(IOptions<ObsidianRepositoryOptions> options, IDbContextFactory<ObsidianDbContext> factory, ILogger<FileExtensionRepository> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < ObsidianRepositoryOptions > options The options with the repository. Microsoft.EntityFrameworkCore.IDbContextFactory < ObsidianDbContext > factory The data-context factory to use with the repository. Microsoft.Extensions.Logging.ILogger < FileExtensionRepository > logger The logger to use with the repository. Properties Logger This property contains a reference to a logger. Declaration protected ILogger<FileExtensionRepository> Logger { get; set; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < FileExtensionRepository > Methods AddAsync(FileExtension, CancellationToken) This method adds a new FileExtension object to the store. Declaration public virtual async Task<FileExtension> AddAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly added FileExtension object. AsQueryable() This method returns a queryable sequence of FileExtension objects. Declaration public virtual IQueryable<FileExtension> AsQueryable() Returns Type Description System.Linq.IQueryable < FileExtension > A queryable sequence of FileExtension objects. DeleteAsync(FileExtension, CancellationToken) This method deletes an existing FileExtension object from the store. Declaration public virtual async Task DeleteAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated FileExtension object. UpdateAsync(FileExtension, CancellationToken) This method updates an existing FileExtension object in the store. Declaration public virtual async Task<FileExtension> UpdateAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly updated FileExtension object. Implements IFileExtensionRepository CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Obsidian.SqlServer.Repositories.html": {
    "href": "api/CG.Obsidian.SqlServer.Repositories.html",
    "title": "Namespace CG.Obsidian.SqlServer.Repositories",
    "keywords": "Namespace CG.Obsidian.SqlServer.Repositories Classes FileExtensionRepository This class is a SQL-Server implementation of the IFileExtensionRepository interface. MimeTypeRepository This class is a SQL-Server implementation of the IMimeTypeRepository interface."
  },
  "api/CG.Obsidian.SqlServer.Repositories.MimeTypeRepository.html": {
    "href": "api/CG.Obsidian.SqlServer.Repositories.MimeTypeRepository.html",
    "title": "Class MimeTypeRepository",
    "keywords": "Class MimeTypeRepository This class is a SQL-Server implementation of the IMimeTypeRepository interface. Inheritance System.Object CG.DisposableBase CG.Business.Repositories.RepositoryBase CG.Linq.EFCore.Repositories.EFCoreRepositoryBase < ObsidianDbContext , Microsoft.Extensions.Options.IOptions < ObsidianRepositoryOptions >> MimeTypeRepository Implements IMimeTypeRepository CG.Business.Repositories.IRepository System.IDisposable Inherited Members CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<CG.Obsidian.SqlServer.ObsidianDbContext, Microsoft.Extensions.Options.IOptions<CG.Obsidian.SqlServer.Repositories.Options.ObsidianRepositoryOptions>>.Factory CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.SqlServer.Repositories Assembly : CG.Obsidian.SqlServer.dll Syntax public class MimeTypeRepository : EFCoreRepositoryBase<ObsidianDbContext, IOptions<ObsidianRepositoryOptions>>, IMimeTypeRepository, IRepository, IDisposable Constructors MimeTypeRepository(IOptions<ObsidianRepositoryOptions>, IDbContextFactory<ObsidianDbContext>, ILogger<MimeTypeRepository>) This constructor creates a new instance of the MimeTypeRepository class. Declaration public MimeTypeRepository(IOptions<ObsidianRepositoryOptions> options, IDbContextFactory<ObsidianDbContext> factory, ILogger<MimeTypeRepository> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < ObsidianRepositoryOptions > options The options for the repository. Microsoft.EntityFrameworkCore.IDbContextFactory < ObsidianDbContext > factory The data-context factory for the repository. Microsoft.Extensions.Logging.ILogger < MimeTypeRepository > logger The logger to use with the repository. Properties Logger This property contains a reference to a logger. Declaration protected ILogger<MimeTypeRepository> Logger { get; set; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < MimeTypeRepository > Methods AddAsync(MimeType, CancellationToken) This method adds a new MimeType object to the store. Declaration public virtual async Task<MimeType> AddAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly added MimeType object. AsQueryable() This method returns a queryable sequence of MimeType objects. Declaration public virtual IQueryable<MimeType> AsQueryable() Returns Type Description System.Linq.IQueryable < MimeType > A queryable sequence of MimeType objects. DeleteAsync(MimeType, CancellationToken) This method deletes an existing MimeType object from the store. Declaration public virtual async Task DeleteAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated MimeType object. UpdateAsync(MimeType, CancellationToken) This method updates an existing MimeType object in the store. Declaration public virtual async Task<MimeType> UpdateAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly updated MimeType object. Implements IMimeTypeRepository CG.Business.Repositories.IRepository System.IDisposable"
  },
  "api/CG.Obsidian.SqlServer.Repositories.Options.html": {
    "href": "api/CG.Obsidian.SqlServer.Repositories.Options.html",
    "title": "Namespace CG.Obsidian.SqlServer.Repositories.Options",
    "keywords": "Namespace CG.Obsidian.SqlServer.Repositories.Options Classes ObsidianRepositoryOptions This class represents repository configuration options for all the CG.Obsidian specific repositories."
  },
  "api/CG.Obsidian.SqlServer.Repositories.Options.ObsidianRepositoryOptions.html": {
    "href": "api/CG.Obsidian.SqlServer.Repositories.Options.ObsidianRepositoryOptions.html",
    "title": "Class ObsidianRepositoryOptions",
    "keywords": "Class ObsidianRepositoryOptions This class represents repository configuration options for all the CG.Obsidian specific repositories. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase CG.Business.Repositories.Options.RepositoryOptions CG.Business.Repositories.Options.LinqRepositoryOptions CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions ObsidianRepositoryOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions.ApplyMigrations CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions.DropDatabase CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions.SeedDatabase CG.Business.Repositories.Options.LinqRepositoryOptions.ConnectionString CG.Business.Repositories.Options.LinqRepositoryOptions.DatabaseName CG.Business.Repositories.Options.LinqRepositoryOptions.ServerName CG.Business.Repositories.Options.LinqRepositoryOptions.TrustedConnection CG.Business.Repositories.Options.LinqRepositoryOptions.MultipleActiveResultSets CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.SqlServer.Repositories.Options Assembly : CG.Obsidian.SqlServer.dll Syntax public class ObsidianRepositoryOptions : EFCoreRepositoryOptions, IValidatableObject Properties LogAllQueries This property indicates whether the repositories should log their internal SQL to the logger. Declaration public bool LogAllQueries { get; set; } Property Value Type Description System.Boolean Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Obsidian.Stores.FileExtensionStore.html": {
    "href": "api/CG.Obsidian.Stores.FileExtensionStore.html",
    "title": "Class FileExtensionStore",
    "keywords": "Class FileExtensionStore This class is a default implementation of the IFileExtensionStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase FileExtensionStore Implements IFileExtensionStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Stores Assembly : CG.Obsidian.dll Syntax public class FileExtensionStore : StoreBase, IFileExtensionStore, IStore, IDisposable Constructors FileExtensionStore(IFileExtensionRepository, ILogger<FileExtensionStore>) This constructor creates a new instance of the FileExtensionStore class. Declaration public FileExtensionStore(IFileExtensionRepository repository, ILogger<FileExtensionStore> logger) Parameters Type Name Description IFileExtensionRepository repository The repository to use with the store. Microsoft.Extensions.Logging.ILogger < FileExtensionStore > logger The logger to use with the store. Properties Logger This property contains a reference to a logger. Declaration protected ILogger<FileExtensionStore> Logger { get; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < FileExtensionStore > Repository This property contains a referene to a repository. Declaration protected IFileExtensionRepository Repository { get; } Property Value Type Description IFileExtensionRepository Methods AddAsync(FileExtension, CancellationToken) This method adds a new FileExtension object to the store. Declaration public virtual async Task<FileExtension> AddAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly added FileExtension object. AsQueryable() This method returns a queryable sequence of FileExtension objects. Declaration public virtual IQueryable<FileExtension> AsQueryable() Returns Type Description System.Linq.IQueryable < FileExtension > A queryable sequence of FileExtension objects. DeleteAsync(Int32, Int32, CancellationToken) This method deletes an existing FileExtension object from the store. Declaration public virtual async Task DeleteAsync(int id, int mimeTypeId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Int32 mimeTypeId The mime type identifier to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated FileExtension object. UpdateAsync(FileExtension, CancellationToken) This method updates an existing FileExtension object in the store. Declaration public virtual async Task<FileExtension> UpdateAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly updated FileExtension object. Implements IFileExtensionStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/CG.Obsidian.Stores.html": {
    "href": "api/CG.Obsidian.Stores.html",
    "title": "Namespace CG.Obsidian.Stores",
    "keywords": "Namespace CG.Obsidian.Stores Classes FileExtensionStore This class is a default implementation of the IFileExtensionStore interface. MimeTypeStore This class is a default implementation of the IMimeTypeStore interface. Interfaces IFileExtensionStore This interface represents an object that stores and retrieves FileExtension objects. IMimeTypeStore This interface represents an object that stores and retrieves MimeType objects."
  },
  "api/CG.Obsidian.Stores.IFileExtensionStore.html": {
    "href": "api/CG.Obsidian.Stores.IFileExtensionStore.html",
    "title": "Interface IFileExtensionStore",
    "keywords": "Interface IFileExtensionStore This interface represents an object that stores and retrieves FileExtension objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Obsidian.Stores Assembly : CG.Obsidian.Abstractions.dll Syntax public interface IFileExtensionStore : IStore, IDisposable Methods AddAsync(FileExtension, CancellationToken) This method adds a new FileExtension object to the store. Declaration Task<FileExtension> AddAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly added FileExtension object. AsQueryable() This method returns a queryable sequence of FileExtension objects. Declaration IQueryable<FileExtension> AsQueryable() Returns Type Description System.Linq.IQueryable < FileExtension > A queryable sequence of FileExtension objects. DeleteAsync(Int32, Int32, CancellationToken) This method deletes an existing FileExtension object from the store. Declaration Task DeleteAsync(int id, int mimeTypeId, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Int32 mimeTypeId The mime type identifier to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated FileExtension object. UpdateAsync(FileExtension, CancellationToken) This method updates an existing FileExtension object in the store. Declaration Task<FileExtension> UpdateAsync(FileExtension model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description FileExtension model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < FileExtension > A task to perform the operation that returns the newly updated FileExtension object."
  },
  "api/CG.Obsidian.Stores.IMimeTypeStore.html": {
    "href": "api/CG.Obsidian.Stores.IMimeTypeStore.html",
    "title": "Interface IMimeTypeStore",
    "keywords": "Interface IMimeTypeStore This interface represents an object that stores and retrieves MimeType objects. Inherited Members System.IDisposable.Dispose() Namespace : CG.Obsidian.Stores Assembly : CG.Obsidian.Abstractions.dll Syntax public interface IMimeTypeStore : IStore, IDisposable Methods AddAsync(MimeType, CancellationToken) This method adds a new MimeType object to the store. Declaration Task<MimeType> AddAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly added MimeType object. AsQueryable() This method returns a queryable sequence of MimeType objects. Declaration IQueryable<MimeType> AsQueryable() Returns Type Description System.Linq.IQueryable < MimeType > A queryable sequence of MimeType objects. DeleteAsync(Int32, CancellationToken) This method deletes an existing MimeType object from the store. Declaration Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated MimeType object. UpdateAsync(MimeType, CancellationToken) This method updates an existing MimeType object in the store. Declaration Task<MimeType> UpdateAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly updated MimeType object."
  },
  "api/CG.Obsidian.Stores.MimeTypeStore.html": {
    "href": "api/CG.Obsidian.Stores.MimeTypeStore.html",
    "title": "Class MimeTypeStore",
    "keywords": "Class MimeTypeStore This class is a default implementation of the IMimeTypeStore interface. Inheritance System.Object CG.DisposableBase CG.Business.Stores.StoreBase MimeTypeStore Implements IMimeTypeStore CG.Business.Stores.IStore System.IDisposable Inherited Members CG.DisposableBase.System.IDisposable.Dispose() CG.DisposableBase.Dispose(System.Boolean) CG.DisposableBase.IsDisposed System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Stores Assembly : CG.Obsidian.dll Syntax public class MimeTypeStore : StoreBase, IMimeTypeStore, IStore, IDisposable Constructors MimeTypeStore(IMimeTypeRepository, ILogger<MimeTypeStore>) This constructor creates a new instance of the MimeTypeStore class. Declaration public MimeTypeStore(IMimeTypeRepository repository, ILogger<MimeTypeStore> logger) Parameters Type Name Description IMimeTypeRepository repository The repository to use with the store. Microsoft.Extensions.Logging.ILogger < MimeTypeStore > logger The logger to use with the store. Properties Logger This property contains a reference to a logger. Declaration protected ILogger<MimeTypeStore> Logger { get; } Property Value Type Description Microsoft.Extensions.Logging.ILogger < MimeTypeStore > Repository This property contains a referene to a repository. Declaration protected IMimeTypeRepository Repository { get; } Property Value Type Description IMimeTypeRepository Methods AddAsync(MimeType, CancellationToken) This method adds a new MimeType object to the store. Declaration public virtual async Task<MimeType> AddAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly added MimeType object. AsQueryable() This method returns a queryable sequence of MimeType objects. Declaration public virtual IQueryable<MimeType> AsQueryable() Returns Type Description System.Linq.IQueryable < MimeType > A queryable sequence of MimeType objects. DeleteAsync(Int32, CancellationToken) This method deletes an existing MimeType object from the store. Declaration public virtual async Task DeleteAsync(int id, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description System.Int32 id The identifier for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task A task to perform the operation that returns the newly updated MimeType object. UpdateAsync(MimeType, CancellationToken) This method updates an existing MimeType object in the store. Declaration public virtual async Task<MimeType> UpdateAsync(MimeType model, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description MimeType model The model to use for the operation. System.Threading.CancellationToken cancellationToken A cancellation token. Returns Type Description System.Threading.Tasks.Task < MimeType > A task to perform the operation that returns the newly updated MimeType object. Implements IMimeTypeStore CG.Business.Stores.IStore System.IDisposable"
  },
  "api/CG.Obsidian.Web.Controllers.html": {
    "href": "api/CG.Obsidian.Web.Controllers.html",
    "title": "Namespace CG.Obsidian.Web.Controllers",
    "keywords": "Namespace CG.Obsidian.Web.Controllers Classes MimeTypesController This class is a REST controller for mime type operations."
  },
  "api/CG.Obsidian.Web.Controllers.MimeTypesController.html": {
    "href": "api/CG.Obsidian.Web.Controllers.MimeTypesController.html",
    "title": "Class MimeTypesController",
    "keywords": "Class MimeTypesController This class is a REST controller for mime type operations. Inheritance System.Object Microsoft.AspNetCore.Mvc.ControllerBase MimeTypesController Inherited Members Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.NoContent() Microsoft.AspNetCore.Mvc.ControllerBase.Ok() Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction() Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[], System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue) Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String, System.String, System.String, System.Nullable<System.DateTimeOffset>, Microsoft.Net.Http.Headers.EntityTagHeaderValue, System.Boolean) Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized() Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.NotFound() Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest() Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity() Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict() Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem() Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String, System.String, System.Nullable<System.Int32>, System.String, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted() Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String, System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String, System.Object, System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge() Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid() Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut() Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext Microsoft.AspNetCore.Mvc.ControllerBase.Request Microsoft.AspNetCore.Mvc.ControllerBase.Response Microsoft.AspNetCore.Mvc.ControllerBase.RouteData Microsoft.AspNetCore.Mvc.ControllerBase.ModelState Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory Microsoft.AspNetCore.Mvc.ControllerBase.Url Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory Microsoft.AspNetCore.Mvc.ControllerBase.User System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Controllers Assembly : CG.Obsidian.Web.dll Syntax [Route(\"api/[controller]\")] [ApiController] public class MimeTypesController : ControllerBase Constructors MimeTypesController(IMimeTypeManager, ILogger<MimeTypesController>) This constructor creates a new instance of the MimeTypesController class. Declaration public MimeTypesController(IMimeTypeManager mimeTypeManager, ILogger<MimeTypesController> logger) Parameters Type Name Description IMimeTypeManager mimeTypeManager The mime type manager to use with the controller. Microsoft.Extensions.Logging.ILogger < MimeTypesController > logger The logger to use with the controller. Methods FindByExtensionAsync(String) This method returns a list of mime types that are associated with the specified file extension. Declaration [AllowAnonymous] [HttpPost] [Produces(\"application/json\", new string[]{})] [Consumes(\"application/json\", new string[]{})] [ProducesResponseType(200)] [ProducesResponseType(500)] [ProducesResponseType(400)] public virtual async Task<IActionResult> FindByExtensionAsync([FromBody] string extension) Parameters Type Name Description System.String extension The extension to use for the operation. Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A task to perform the operation that returns a Microsoft.AspNetCore.Mvc.IActionResult instance, with the results of the operation."
  },
  "api/CG.Obsidian.Web.Extensions.ApplicationBuilderExtensions.html": {
    "href": "api/CG.Obsidian.Web.Extensions.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Extensions Assembly : CG.Obsidian.Web.dll Syntax public static class ApplicationBuilderExtensions Methods UseCustomBlazor(IApplicationBuilder, IWebHostEnvironment) This method wires up any startup logic required, by Blazor, to support the server. Declaration public static IApplicationBuilder UseCustomBlazor(this IApplicationBuilder applicationBuilder, IWebHostEnvironment webHostEnvironment) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment webHostEnvironment The web host environment to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together. UseCustomHealthChecks(IApplicationBuilder, IWebHostEnvironment) This method wires up any startup logic required, by health checks, to support the server. Declaration public static IApplicationBuilder UseCustomHealthChecks(this IApplicationBuilder applicationBuilder, IWebHostEnvironment webHostEnvironment) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment webHostEnvironment The web host environment to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together. UseCustomObsidian(IApplicationBuilder, IWebHostEnvironment, IConfiguration) This method wires up any startup logic required, by CG.Obsidian, to support the server. Declaration public static IApplicationBuilder UseCustomObsidian(this IApplicationBuilder applicationBuilder, IWebHostEnvironment webHostEnvironment, IConfiguration configuration) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment webHostEnvironment The web host environment to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together. UseCustomSwagger(IApplicationBuilder, IWebHostEnvironment) This method wires up any startup logic required, by Swagger, to support the server. Declaration public static IApplicationBuilder UseCustomSwagger(this IApplicationBuilder applicationBuilder, IWebHostEnvironment webHostEnvironment) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment webHostEnvironment The web host environment to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together."
  },
  "api/CG.Obsidian.Web.Extensions.html": {
    "href": "api/CG.Obsidian.Web.Extensions.html",
    "title": "Namespace CG.Obsidian.Web.Extensions",
    "keywords": "Namespace CG.Obsidian.Web.Extensions Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type."
  },
  "api/CG.Obsidian.Web.Extensions.ServiceCollectionExtensions.html": {
    "href": "api/CG.Obsidian.Web.Extensions.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Extensions Assembly : CG.Obsidian.Web.dll Syntax public static class ServiceCollectionExtensions Methods AddCustomBlazor(IServiceCollection, IConfiguration) This method adds custom Blazor logic for the server. Declaration public static IServiceCollection AddCustomBlazor(this IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. AddCustomHealthChecks(IServiceCollection, IConfiguration) This method adds custom health checks for the server. Declaration public static IServiceCollection AddCustomHealthChecks(this IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. AddCustomIdentity(IServiceCollection, IConfiguration) This method adds custom identity logic for the server. Declaration public static IServiceCollection AddCustomIdentity(this IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. AddCustomObsidian(IServiceCollection, IConfiguration) This method adds custom CG.Obsidian logic for the server. Declaration public static IServiceCollection AddCustomObsidian(this IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together. AddCustomSwagger(IServiceCollection, IConfiguration) This method adds custom swagger documentation for the server. Declaration public static IServiceCollection AddCustomSwagger(this IServiceCollection serviceCollection, IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "api/CG.Obsidian.Web.html": {
    "href": "api/CG.Obsidian.Web.html",
    "title": "Namespace CG.Obsidian.Web",
    "keywords": "Namespace CG.Obsidian.Web Classes Program This class contains the main program logic. Startup This class contains startup logic for the server."
  },
  "api/CG.Obsidian.Web.Options.ApiAuthOptions.html": {
    "href": "api/CG.Obsidian.Web.Options.ApiAuthOptions.html",
    "title": "Class ApiAuthOptions",
    "keywords": "Class ApiAuthOptions This class contains configuration settings for authenticating the internal REST API. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase ApiAuthOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Options Assembly : CG.Obsidian.Web.dll Syntax public class ApiAuthOptions : OptionsBase, IValidatableObject Properties ApiName This property contains the name for an API. Declaration [Required] public string ApiName { get; set; } Property Value Type Description System.String ApiSecret This property contains a client secret for the API. Declaration [Required] [ProtectedProperty(Optional = true)] public string ApiSecret { get; set; } Property Value Type Description System.String Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Obsidian.Web.Options.html": {
    "href": "api/CG.Obsidian.Web.Options.html",
    "title": "Namespace CG.Obsidian.Web.Options",
    "keywords": "Namespace CG.Obsidian.Web.Options Classes ApiAuthOptions This class contains configuration settings for authenticating the internal REST API. IdentityOptions This class represents configuration options for identity activities."
  },
  "api/CG.Obsidian.Web.Options.IdentityOptions.html": {
    "href": "api/CG.Obsidian.Web.Options.IdentityOptions.html",
    "title": "Class IdentityOptions",
    "keywords": "Class IdentityOptions This class represents configuration options for identity activities. Inheritance System.Object CG.DataAnnotations.ValidatableObject CG.Options.OptionsBase CG.Blazor.Identity.Options.TokenServiceOptions IdentityOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members CG.Blazor.Identity.Options.TokenServiceOptions.Authority CG.Blazor.Identity.Options.TokenServiceOptions.OIDC CG.DataAnnotations.ValidatableObject.Validate(System.ComponentModel.DataAnnotations.ValidationContext) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Options Assembly : CG.Obsidian.Web.dll Syntax public class IdentityOptions : TokenServiceOptions, IValidatableObject Properties API This property contains configuration settings for authenticating the internal REST API. Declaration [Required] public ApiAuthOptions API { get; set; } Property Value Type Description ApiAuthOptions Implements System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/CG.Obsidian.Web.Pages.Account.html": {
    "href": "api/CG.Obsidian.Web.Pages.Account.html",
    "title": "Namespace CG.Obsidian.Web.Pages.Account",
    "keywords": "Namespace CG.Obsidian.Web.Pages.Account Classes LoginModel This class is the code-behind for the Login page. LogoutModel This class is the code-behind for the Logout page."
  },
  "api/CG.Obsidian.Web.Pages.Account.LoginModel.html": {
    "href": "api/CG.Obsidian.Web.Pages.Account.LoginModel.html",
    "title": "Class LoginModel",
    "keywords": "Class LoginModel This class is the code-behind for the Login page. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel LoginModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Pages.Account Assembly : CG.Obsidian.Web.dll Syntax public class LoginModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Methods OnGetAsync(String) This method is called whenever the page is sent a GET verb. Declaration public async Task OnGetAsync(string redirectUri) Parameters Type Name Description System.String redirectUri The uri for a redirect. Returns Type Description System.Threading.Tasks.Task A task to perform the operation. Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Obsidian.Web.Pages.Account.LogoutModel.html": {
    "href": "api/CG.Obsidian.Web.Pages.Account.LogoutModel.html",
    "title": "Class LogoutModel",
    "keywords": "Class LogoutModel This class is the code-behind for the Logout page. Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel LogoutModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Pages.Account Assembly : CG.Obsidian.Web.dll Syntax public class LogoutModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Constructors LogoutModel(IOptions<IdentityOptions>) This constructor creates a new instance of the LogoutModel class. Declaration public LogoutModel(IOptions<IdentityOptions> identityOptions) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < IdentityOptions > identityOptions The identity options to use for the page. Methods OnPostAsync() This method is called whenever the page is sent a POST verb. Declaration public async Task<IActionResult> OnPostAsync() Returns Type Description System.Threading.Tasks.Task < Microsoft.AspNetCore.Mvc.IActionResult > A task to perform the operation, that returns an Microsoft.AspNetCore.Mvc.IActionResult object. Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Obsidian.Web.Pages.ErrorModel.html": {
    "href": "api/CG.Obsidian.Web.Pages.ErrorModel.html",
    "title": "Class ErrorModel",
    "keywords": "Class ErrorModel Inheritance System.Object Microsoft.AspNetCore.Mvc.RazorPages.PageModel ErrorModel Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata Inherited Members Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync<TModel>(TModel, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryUpdateModelAsync(System.Object, System.Type, System.String, Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider, System.Func<Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata, System.Boolean>) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, System.String, System.Text.Encoding) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Content(System.String, Microsoft.Net.Http.Headers.MediaTypeHeaderValue) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.Byte[], System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.IO.Stream, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.File(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.LocalRedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.NotFound(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Page() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PhysicalFile(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Redirect(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectPermanentPreserveMethod(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToAction(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToActionPermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoute(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToRoutePermanentPreserveMethod(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPage(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanent(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RedirectToPagePermanentPreserveMethod(System.String, System.String, System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignIn(System.Security.Claims.ClaimsPrincipal, Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties, System.String[]) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.StatusCode(System.Int32, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Unauthorized() Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Partial(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.String, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewComponent(System.Type, System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TryValidateModel(System.Object, System.String) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelected(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuting(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecuted(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerSelectionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerSelectedContext) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.OnPageHandlerExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutingContext, Microsoft.AspNetCore.Mvc.Filters.PageHandlerExecutionDelegate) Microsoft.AspNetCore.Mvc.RazorPages.PageModel.PageContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.HttpContext Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Request Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Response Microsoft.AspNetCore.Mvc.RazorPages.PageModel.RouteData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ModelState Microsoft.AspNetCore.Mvc.RazorPages.PageModel.User Microsoft.AspNetCore.Mvc.RazorPages.PageModel.TempData Microsoft.AspNetCore.Mvc.RazorPages.PageModel.Url Microsoft.AspNetCore.Mvc.RazorPages.PageModel.MetadataProvider Microsoft.AspNetCore.Mvc.RazorPages.PageModel.ViewData System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Pages Assembly : CG.Obsidian.Web.dll Syntax [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] [IgnoreAntiforgeryToken] public class ErrorModel : PageModel, IAsyncPageFilter, IPageFilter, IFilterMetadata Constructors ErrorModel(ILogger<ErrorModel>) Declaration public ErrorModel(ILogger<ErrorModel> logger) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger < ErrorModel > logger Properties RequestId Declaration public string RequestId { get; set; } Property Value Type Description System.String ShowRequestId Declaration public bool ShowRequestId { get; } Property Value Type Description System.Boolean Methods OnGet() Declaration public void OnGet() Implements Microsoft.AspNetCore.Mvc.Filters.IAsyncPageFilter Microsoft.AspNetCore.Mvc.Filters.IPageFilter Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"
  },
  "api/CG.Obsidian.Web.Pages.html": {
    "href": "api/CG.Obsidian.Web.Pages.html",
    "title": "Namespace CG.Obsidian.Web.Pages",
    "keywords": "Namespace CG.Obsidian.Web.Pages Classes ErrorModel"
  },
  "api/CG.Obsidian.Web.Pages.MimeTypes.FileExtensionEditDialog.html": {
    "href": "api/CG.Obsidian.Web.Pages.MimeTypes.FileExtensionEditDialog.html",
    "title": "Class FileExtensionEditDialog",
    "keywords": "Class FileExtensionEditDialog This class is the code-behind for the FileExtensionEditDialog razor view. Inheritance System.Object FileExtensionEditDialog Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Pages.MimeTypes Assembly : CG.Obsidian.Web.dll Syntax public class FileExtensionEditDialog Properties Caption This property contains a reference to the dialog caption. Declaration [Parameter] public string Caption { get; set; } Property Value Type Description System.String Model This property contains a reference to the model. Declaration [Parameter] public FileExtension Model { get; set; } Property Value Type Description FileExtension"
  },
  "api/CG.Obsidian.Web.Pages.MimeTypes.html": {
    "href": "api/CG.Obsidian.Web.Pages.MimeTypes.html",
    "title": "Namespace CG.Obsidian.Web.Pages.MimeTypes",
    "keywords": "Namespace CG.Obsidian.Web.Pages.MimeTypes Classes FileExtensionEditDialog This class is the code-behind for the FileExtensionEditDialog razor view. Index This class is the code-behind for the Index razor view. MimeTypeEditDialog This class is the code-behind for the MimeTypeEditDialog razor view."
  },
  "api/CG.Obsidian.Web.Pages.MimeTypes.Index.html": {
    "href": "api/CG.Obsidian.Web.Pages.MimeTypes.Index.html",
    "title": "Class Index",
    "keywords": "Class Index This class is the code-behind for the Index razor view. Inheritance System.Object Index Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Pages.MimeTypes Assembly : CG.Obsidian.Web.dll Syntax public class Index Methods OnInitializedAsync() This method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Declaration protected override async Task OnInitializedAsync() Returns Type Description System.Threading.Tasks.Task A task to perform the operation."
  },
  "api/CG.Obsidian.Web.Pages.MimeTypes.MimeTypeEditDialog.html": {
    "href": "api/CG.Obsidian.Web.Pages.MimeTypes.MimeTypeEditDialog.html",
    "title": "Class MimeTypeEditDialog",
    "keywords": "Class MimeTypeEditDialog This class is the code-behind for the MimeTypeEditDialog razor view. Inheritance System.Object MimeTypeEditDialog Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web.Pages.MimeTypes Assembly : CG.Obsidian.Web.dll Syntax public class MimeTypeEditDialog Properties Caption This property contains a reference to the dialog caption. Declaration [Parameter] public string Caption { get; set; } Property Value Type Description System.String Model This property contains a reference to the model. Declaration [Parameter] public MimeType Model { get; set; } Property Value Type Description MimeType Methods OnInitializedAsync() This method invoked when the component is ready to start, having received its initial parameters from its parent in the render tree. Declaration protected override async Task OnInitializedAsync() Returns Type Description System.Threading.Tasks.Task A task to perform the operation."
  },
  "api/CG.Obsidian.Web.Program.html": {
    "href": "api/CG.Obsidian.Web.Program.html",
    "title": "Class Program",
    "keywords": "Class Program This class contains the main program logic. Inheritance System.Object Program Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web Assembly : CG.Obsidian.Web.dll Syntax public class Program Methods CreateHostBuilder(String[]) This method returns a host builder. Declaration public static IHostBuilder CreateHostBuilder(string[] args) Parameters Type Name Description System.String [] args Optional command line arguments Returns Type Description Microsoft.Extensions.Hosting.IHostBuilder An Microsoft.Extensions.Hosting.IHostBuilder instance. Main(String[]) This method is the main entry point for the process. Declaration public static void Main(string[] args) Parameters Type Name Description System.String [] args Optional command line arguments"
  },
  "api/CG.Obsidian.Web.Startup.html": {
    "href": "api/CG.Obsidian.Web.Startup.html",
    "title": "Class Startup",
    "keywords": "Class Startup This class contains startup logic for the server. Inheritance System.Object Startup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Obsidian.Web Assembly : CG.Obsidian.Web.dll Syntax public class Startup Constructors Startup(IConfiguration) This constructor creates a new instance of the Startup class. Declaration public Startup(IConfiguration configuration) Parameters Type Name Description Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Properties Configuration This property contains the configuration for the server. Declaration public IConfiguration Configuration { get; } Property Value Type Description Microsoft.Extensions.Configuration.IConfiguration Methods Configure(IApplicationBuilder, IWebHostEnvironment) This method is called to configure the web application. Declaration public void Configure(IApplicationBuilder app, IWebHostEnvironment env) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder app The application builder to use for the operation. Microsoft.AspNetCore.Hosting.IWebHostEnvironment env The runtime environment to use for the operation. ConfigureServices(IServiceCollection) This method is called to configure services with the DI container. Declaration public void ConfigureServices(IServiceCollection services) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services The service collection to use for the operation."
  },
  "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions.html",
    "title": "Class ApplicationBuilderExtensions",
    "keywords": "Class ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type. Inheritance System.Object ApplicationBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Obsidian.SqlServer.dll Syntax public static class ApplicationBuilderExtensions Remarks This class contains only those extension methods that are related to the logic within the library itself. Methods UseSqlServerRepositories(IApplicationBuilder, String) This method wires up any startup logic required to support the repositories and underyling SQL Server for the CG.Beryl library. Declaration public static IApplicationBuilder UseSqlServerRepositories(this IApplicationBuilder applicationBuilder, string configurationSection) Parameters Type Name Description Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder The application builder to use for the operation. System.String configurationSection The configuration section name that corresponds with the repositories. Returns Type Description Microsoft.AspNetCore.Builder.IApplicationBuilder The value of the applicationBuilder parameter, for chaining calls together."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes ApplicationBuilderExtensions This class contains extension methods related to the Microsoft.AspNetCore.Builder.IApplicationBuilder type."
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for the CG.Obsidian sql server library."
  },
  "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.html",
    "title": "Class ServiceCollectionExtensions",
    "keywords": "Class ServiceCollectionExtensions This class contains extension methods related to the Microsoft.Extensions.DependencyInjection.IServiceCollection type, for the CG.Obsidian sql server library. Inheritance System.Object ServiceCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : CG.Obsidian.SqlServer.dll Syntax public static class ServiceCollectionExtensions Methods AddSqlServerRepositories(IServiceCollection, IConfiguration, ServiceLifetime) This method adds SQL Server repositories for the CG.Obsidian library. Declaration public static IServiceCollection AddSqlServerRepositories(this IServiceCollection serviceCollection, IConfiguration configuration, ServiceLifetime serviceLifetime = ServiceLifetime.Scoped) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection serviceCollection The service collection to use for the operation. Microsoft.Extensions.Configuration.IConfiguration configuration The configuration to use for the operation. Microsoft.Extensions.DependencyInjection.ServiceLifetime serviceLifetime The service lifetime to use for the operation. Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection The value of the serviceCollection parameter, for chaining calls together."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Obsidian.Web is a nanoservice for managing Mime types and associate file extensions."
  }
}